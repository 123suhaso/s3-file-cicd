trigger:
- main

variables:
  ACR_NAME: suhaso1234
  ACR_LOGIN_SERVER: suhaso1234.azurecr.io
  IMAGE_NAME: flask-s3-app
  AKS_RESOURCE_GROUP: suhas
  AKS_CLUSTER_NAME: spoo1234cicd
  IMAGE_TAG: $(Build.SourceVersion)

stages:
- stage: Build
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Build and Push Docker image to ACR
      inputs:
        containerRegistry: 'acr-registry-cicd'                # <-- Your ACR service connection name
        repository: $(IMAGE_NAME)                             # <-- Just repo name, no full path here
        command: buildAndPush
        Dockerfile: Dockerfile
        tags: $(IMAGE_TAG)

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployToAKS
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureCLI@2
      displayName: Deploy to AKS
      inputs:
        azureSubscription: 'azure-connection-cicd'           # <-- Your Azure service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(AKS_RESOURCE_GROUP) --name $(AKS_CLUSTER_NAME)
          
          # Replace the image tag placeholder with actual image tag in deployment.yaml
          sed -i "s|IMAGE_TAG_PLACEHOLDER|$(IMAGE_TAG)|g" manifests/deployment.yaml

          # Replace the image registry placeholder if used
          sed -i "s|ACR_LOGIN_SERVER_PLACEHOLDER|$(ACR_LOGIN_SERVER)|g" manifests/deployment.yaml

          # Apply the Kubernetes manifests
          kubectl apply -f manifests/deployment.yaml
          kubectl apply -f manifests/service.yaml
          kubectl apply -f manifests/secret.yaml
